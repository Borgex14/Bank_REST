services:
  postgres:
    image: postgres:15
    container_name: card_db
    environment:
      POSTGRES_DB: card_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - card-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d card_db"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: card_manager_app
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/card_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
      SPRING_LIQUIBASE_ENABLED: false
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - card-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  card-network:
    driver: bridge